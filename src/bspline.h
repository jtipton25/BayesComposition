#include <RcppArmadillo.h>
// [[Rcpp::depends(RcppArmadillo)]]
// [[Rcpp::interfaces(r, cpp)]]

using namespace Rcpp;
using namespace arma;

///////////////////////////////////////////////////////////////////////////////
/////////////// construct a vector along a sequence of length n ///////////////
///////////////////////////////////////////////////////////////////////////////

NumericVector seq_lenBS(const int& n);

///////////////////////////////////////////////////////////////////////////////
///////// construct a vector of percentiles for construction of knots /////////
/////////  placed evenly along the percentiles ////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

NumericVector quantileBS(NumericVector x, NumericVector probs);

///////////////////////////////////////////////////////////////////////////////
//// A function for implementing the Cox-de Boor algorithm for constructing ///
//// B-splines ////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

double basis_cpp (const double& x, const int& degree, const int& i,
                  const arma::vec& knots);

///////////////////////////////////////////////////////////////////////////////
//// A function for implementing the Cox-de Boor algorithm for constructing ///
//// B-splines ////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

arma::mat bs_cpp (const arma::vec& x, const int& df,
                  const arma::vec& interior_knots, const int& degree,
                  const bool& intercept,
                  const arma::vec& Boundary_knots);
